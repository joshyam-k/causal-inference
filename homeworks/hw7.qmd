---
title: "hw7"
format: pdf
editor: visual
---

```{r, message=F, warning=F}
library(here)
library(tidyverse)
library(sandwich)
data <- read.table(here("data", "rdcongress.txt"))
# response = dwnom
# forcing variable demvoteshare
```

## a

```{r, message=F, warning=F}
data_clean <- data %>% 
  select(dwnom, demvoteshare) %>% 
  drop_na() %>% 
  mutate(demvoteshare_t = demvoteshare - 0.5)
```

## b

First fit the models and compute robust variance estiamtes for their parameters

``` {r, message = F, warning = F}
lm_lower <- lm(
  dwnom ~ demvoteshare_t,
  data = filter(data_clean, between(demvoteshare_t, -0.02, 0))
  )
lower_vcov <- vcovHC(lm_lower, type="HC")

lm_upper <- lm(
  dwnom ~ demvoteshare_t,
  data = filter(data_clean, between(demvoteshare_t, 0, 0.02))
)
upper_vcov <- vcovHC(lm_upper, type="HC")
```

Using the provided formula, compute 95% confidence intervals using robust standard errors for the two regression lines

```{r, message = F, warning = F}
# var(intercept) + x2 var(slope) + 2*x*cov(slope, intercept)

se_lower <- fortify(lm_lower) %>% 
  mutate(
    var_l = lower_vcov[1, 1] + demvoteshare_t^2*lower_vcov[2, 2] +
      2*demvoteshare_t*lower_vcov[1, 2],
    se_l = sqrt(var_l)
    ) %>% 
  mutate(lower = .fitted - 1.96*se_l,
         upper = .fitted + 1.96*se_l) %>% 
  select(demvoteshare_t, upper, lower)

se_upper <- fortify(lm_upper) %>% 
  mutate(
    var_u = upper_vcov[1, 1] + demvoteshare_t^2*upper_vcov[2, 2] +
      2*demvoteshare_t*upper_vcov[1, 2],
    se_u = sqrt(var_u)
    ) %>% 
  mutate(lower = .fitted - 1.96*se_u,
         upper = .fitted + 1.96*se_u) %>% 
  select(demvoteshare_t, upper, lower)
  
```


Plot the reggression lines, the confidence intervals and the cutoff all on one plot. We'll look at a restricted range of the forcing variable so we can see these things more easily. My substantive interpretation is that we do see a discontinuity in our forcing variable and that lower proportions of democratic vote share are associated with higher values of dwnom while higher proportions of democratic vote share are associated with lower values of dwnom.

```{r, message = F, warning = F}
data_clean %>% 
  ggplot(aes(x = demvoteshare_t, y = dwnom)) +
  geom_point(size = 2, alpha = 0.2) +
  geom_line(data = fortify(lm_lower),
            aes(x = demvoteshare_t, y = .fitted),
            size = 1, color = "blue") +
  geom_line(data = se_lower,
            aes(x = demvoteshare_t, y = lower),
            size = 0.7, color = "red", linetype = "dashed") +
  geom_line(data = se_lower,
            aes(x = demvoteshare_t, y = upper),
            size = 0.7, color = "red", linetype = "dashed") +
  geom_line(data = fortify(lm_upper),
            aes(x = demvoteshare_t, y = .fitted),
            size = 1, color = "blue") +
  geom_line(data = se_upper,
            aes(x = demvoteshare_t, y = lower),
            size = 0.7, color = "red", linetype = "dashed") +
  geom_line(data = se_upper,
            aes(x = demvoteshare_t, y = upper),
            size = 0.7, color = "red", linetype = "dashed") +
  geom_vline(xintercept = 0, color = "orange", size = 1.3, linetype = "dashed") +
  theme_minimal() +
  xlim(c(-0.05, 0.05))

```


## c

```{r}
model_data <- data_clean %>% 
  mutate(D = ifelse(demvoteshare > 0.5, 1, 0)) %>% 
  filter(between(demvoteshare, 0.48, 0.52))

mod <- lm(dwnom ~ demvoteshare_t + D + demvoteshare_t*D, data = model_data)
se <- sqrt(vcovHC(mod, type="HC")["D", "D"])
ci <- mod$coefficients["D"] + 1.96*c(-1,1)*se

data.frame(
  est = mod$coefficients["D"],
  lower = ci[1],
  upper = ci[2]
)
```


```{r}
randomization_scheme <- function() {
  new_treat <- model_data %>% 
    mutate(D_new = rbinom(654, 1, 0.5))
  return(new_treat)
}

null_dist <- data.frame(est = rep(0, 5000))
for(i in 1:5000){
  dat <- randomization_scheme()
  mod <- lm(dwnom ~ demvoteshare_t + D_new + demvoteshare_t*D_new, data = dat)
  null_dist[i, ] <- mod$coefficients["D_new"]
}

null_dist %>% 
  ggplot(aes(x = est)) +
  geom_histogram(bins = 100) +
  geom_vline(xintercept = -0.3710298, color = "red", linetype = "dashed") +
  geom_vline(xintercept = 0.3710298, color = "red", linetype = "dashed")

```



## d

Create this “lagged” DW-NOMINATE variable that within each district (district) and congress number (cngrsnum) takes the value of dwnom from the previous congress number. Note that we need to delete the observations where there was a redistricting prior to the election. The year variable of these observations take the value of 1932, 1942, 1952, 1962, 1972, 1982, 1992, and 2002.

```{r}
data %>% 
  select(dwnom, demvoteshare, district, cngrsnum, year, state) %>% 
  filter(!(year %in% c(1932, 1942, 1952, 1962, 1972, 1982, 1992, 2002))) %>% 
  drop_na() %>% 
  arrange(district, cngrsnum) %>% 
  View()
  
  
  
```

